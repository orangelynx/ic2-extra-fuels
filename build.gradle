import java.nio.charset.StandardCharsets

buildscript {
    repositories {
        jcenter()
        maven { url = "https://files.minecraftforge.net/maven" }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT'
    }
}
plugins {
    id "com.github.johnrengelman.shadow" version "4.0.2"
    id "java"
}
apply plugin: 'net.minecraftforge.gradle.forge'

//Only edit below this line, the above code adds and enables the necessary things for Forge to be setup.

version = "1.2-ic2-219"
group = "orangelynx.ic2-extra-fuels" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "ic2-extra-fuels"

sourceCompatibility = targetCompatibility = '1.8' // Need this here so eclipse task generates correctly.
compileJava {
    sourceCompatibility = targetCompatibility = '1.8'
}

repositories {
    maven {
        name = "ic2"
        url = "http://maven.ic2.player.to/"
    }
}

minecraft {
    version = "1.12.2-14.23.5.2814"
    runDir = "run"
    
    // the mappings can be changed at any time, and must be in the following format.
    // snapshot_YYYYMMDD   snapshot are built nightly.
    // stable_#            stables are built at the discretion of the MCP team.
    // Use non-default mappings at your own risk. they may not always work.
    // simply re-run your setup task after changing the mappings to update your workspace.
    mappings = "stable_39"
    // makeObfSourceJar = false // an Srg named sources jar is made by default. uncomment this to disable.
}

dependencies {
    // you may put jars on which you depend on in ./libs
    // or you may define them like so..
    //compile "some.group:artifact:version:classifier"
    //compile "some.group:artifact:version"
      
    // real examples
    //compile 'com.mod-buildcraft:buildcraft:6.0.8:dev'  // adds buildcraft to the dev env
    //compile 'com.googlecode.efficient-java-matrix-library:ejml:0.24' // adds ejml to the dev env

    // the 'provided' configuration is for optional dependencies that exist at compile-time but might not at runtime.
    //provided 'com.mod-buildcraft:buildcraft:6.0.8:dev'

    // the deobf configurations:  'deobfCompile' and 'deobfProvided' are the same as the normal compile and provided,
    // except that these dependencies get remapped to your current MCP mappings
    //deobfCompile 'com.mod-buildcraft:buildcraft:6.0.8:dev'
    //deobfProvided 'com.mod-buildcraft:buildcraft:6.0.8:dev'

    // for more info...
    // http://www.gradle.org/docs/current/userguide/artifact_dependencies_tutorial.html
    // http://www.gradle.org/docs/current/userguide/dependency_management.html

    compile 'net.industrial-craft:industrialcraft-2:2.8.219-ex112:api'
}

processResources {
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
                
        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
        
    // copy everything else except the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

shadowJar {
    exclude '*.properties'
    exclude 'dummyThing'
    dependencies {
        include(dependency('com.opencsv:opencsv:4.4'))
    }
    minimize()
}

tasks.build.dependsOn shadowJar

artifacts {
    archives shadowJar
}

reobf {
    shadowJar {
        mappingType = "SEARGE"
    }
}
tasks.reobfShadowJar.mustRunAfter shadowJar
tasks.build.dependsOn reobfShadowJar


StringBuilder stringBuilder = new StringBuilder()
FileReader fileReader = new FileReader("src/main/java/orangelynx/ic2_extra_fuels/Constant.java")
BufferedReader bufferedReader = new BufferedReader(fileReader)
String line
boolean first = true
while ((line = bufferedReader.readLine()) != null) {
    if (line.contains("public static final String VERSION")) {
        int i = line.indexOf("public static final String VERSION")
        line = line.substring(0, i)
        line = line + "public static final String VERSION = \"" + version + "\";"
    }
    if (first) {
        first = false
    } else {
        stringBuilder.append("\n")
    }
    stringBuilder.append(line)
}
bufferedReader.close()
fileReader.close()
if (stringBuilder.length() > 0) {
    FileOutputStream fileOutputStream = new FileOutputStream("src/main/java/orangelynx/ic2_extra_fuels/Constant.java")
    fileOutputStream.write(stringBuilder.toString().getBytes(StandardCharsets.UTF_8))
    fileOutputStream.close()
}